{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\FMA\\\\Sessions\\\\React JS\\\\quiz-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const questions = [{\n    question: \"What is the capital of France?\",\n    options: [\"London\", \"Berlin\", \"Paris\", \"Madrid\"],\n    answer: 2 // index of \"Paris\"\n  }, {\n    question: \"What color is the sky?\",\n    options: [\"Green\", \"Blue\", \"Red\", \"Yellow\"],\n    answer: 1 // index of \"Blue\"\n  }, {\n    question: \"How many legs does a spider have?\",\n    options: [\"4\", \"6\", \"8\", \"10\"],\n    answer: 2 // index of \"8\"\n  }];\n  const [userAnswers, setUserAnswers] = useState(null);\n  let score = 0;\n  const showResult = u => {\n    setUserAnswers(u.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Simple Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), questions.map((q, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: q.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), q.options.map((opt, j) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `q${i}`,\n                value: j\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 23\n              }, this), opt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }, this);\n    }), questions.forEach((q, i) => {\n      userAnswers = `input[name=\"q${i}\"]:checked`;\n      if (userAnswers && parseInt(userAnswers.value) === q.answer) {\n        score++;\n      }\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You scored \", userAnswers, \" out of 3\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showResult,\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wmYX1pO+ZmcvKoTBmXRV89/2bYI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","questions","question","options","answer","userAnswers","setUserAnswers","score","showResult","u","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","map","q","i","opt","j","type","name","forEach","parseInt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Documents/FMA/Sessions/React JS/quiz-react/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nfunction App() {\n  const questions = [\n    {\n      question: \"What is the capital of France?\",\n      options: [\"London\", \"Berlin\", \"Paris\", \"Madrid\"],\n      answer: 2  // index of \"Paris\"\n    },\n    {\n      question: \"What color is the sky?\",\n      options: [\"Green\", \"Blue\", \"Red\", \"Yellow\"],\n      answer: 1  // index of \"Blue\"\n    },\n    {\n      question: \"How many legs does a spider have?\",\n      options: [\"4\", \"6\", \"8\", \"10\"],\n      answer: 2  // index of \"8\"\n    }\n  ];\n\n  const [userAnswers, setUserAnswers] = useState(null);\n\n  let score = 0;\n  const showResult = (u) => { setUserAnswers(u.target.value) }\n\n\n  return (\n    <div>\n      <h2>Simple Quiz</h2>\n      {\n        questions.map((q, i) => {\n          return (<div key={i}>\n            <p>{q.question}</p>\n            {\n              q.options.map((opt, j) => {\n                return (\n                  <div key={j}>\n                    <label >\n                      <input type=\"radio\" name={`q${i}`} value={j} />{opt}\n                    </label>\n                  </div>\n                )\n              })\n            }\n            <br />\n          </div>\n          )\n        })\n      }\n      {\n        questions.forEach((q, i) => {\n\n          userAnswers = `input[name=\"q${i}\"]:checked`;\n          if (userAnswers && parseInt(userAnswers.value) === q.answer) {\n            score++;\n          }\n        })\n      }\n      <p>You scored {userAnswers} out of 3</p>\n      <button onClick={showResult}>Submit Quiz</button>\n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}