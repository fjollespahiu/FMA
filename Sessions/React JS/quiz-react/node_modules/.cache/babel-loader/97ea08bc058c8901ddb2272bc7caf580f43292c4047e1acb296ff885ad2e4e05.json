{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\FMA\\\\Sessions\\\\React JS\\\\quiz-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const questions = [{\n    question: \"What is the capital of France?\",\n    options: [\"London\", \"Berlin\", \"Paris\", \"Madrid\"],\n    answer: 2 // index of \"Paris\"\n  }, {\n    question: \"What color is the sky?\",\n    options: [\"Green\", \"Blue\", \"Red\", \"Yellow\"],\n    answer: 1 // index of \"Blue\"\n  }, {\n    question: \"How many legs does a spider have?\",\n    options: [\"4\", \"6\", \"8\", \"10\"],\n    answer: 2 // index of \"8\"\n  }];\n  const [userAnswers, setUserAnswers] = useState([]);\n  const handleAnswer = (i, j) => {\n    const chosenOption = [...userAnswers];\n    chosenOption[i] = j;\n    setUserAnswers(chosenOption);\n  };\n  const [score, setScore] = useState(0);\n  const handleScore = () => {\n    setScore(questions.filter((q, i) => userAnswers[i] === q.answer));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Simple Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), questions.map((q, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: q.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), q.options.map((opt, j) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `q${i}`,\n                value: j,\n                onChange: () => handleAnswer(i, j)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 23\n              }, this), opt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You scored \", score, \" out of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleScore,\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Yad/S3e7IqKHgv5y/pfXliRctbs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","questions","question","options","answer","userAnswers","setUserAnswers","handleAnswer","i","j","chosenOption","score","setScore","handleScore","filter","q","children","fileName","_jsxFileName","lineNumber","columnNumber","map","opt","type","name","value","onChange","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Documents/FMA/Sessions/React JS/quiz-react/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction App() {\n  const questions = [\n    {\n      question: \"What is the capital of France?\",\n      options: [\"London\", \"Berlin\", \"Paris\", \"Madrid\"],\n      answer: 2  // index of \"Paris\"\n    },\n    {\n      question: \"What color is the sky?\",\n      options: [\"Green\", \"Blue\", \"Red\", \"Yellow\"],\n      answer: 1  // index of \"Blue\"\n    },\n    {\n      question: \"How many legs does a spider have?\",\n      options: [\"4\", \"6\", \"8\", \"10\"],\n      answer: 2  // index of \"8\"\n    }\n  ];\n\n  const [userAnswers, setUserAnswers] = useState([]);\n  const handleAnswer = (i, j) => {\n    const chosenOption = [...userAnswers]\n    chosenOption[i] = j\n\n    setUserAnswers(chosenOption)\n  }\n\n  const [score, setScore] = useState(0);\n  const handleScore = () => {\n      setScore(questions.filter((q,i)=> userAnswers[i] === q.answer)\n    )\n    };\n\n  return (\n    <div>\n      <h2>Simple Quiz</h2>\n      {\n        questions.map((q, i) => {\n          return (<div key={i}>\n            <p>{q.question}</p>\n            {\n              q.options.map((opt, j) => {\n                return (\n                  <div key={j}>\n\n                    <label >\n                      <input\n                        type=\"radio\"\n                        name={`q${i}`}\n                        value={j}\n                        onChange={() => handleAnswer(i, j)}\n                      />{opt}\n                    </label>\n                  </div>\n                )\n              })\n            }\n            <br />\n          </div>\n          )\n        })\n      }\n      {\n\n      }\n      <p>You scored {score} out of {questions.length}</p>\n      <button onClick={handleScore}>Submit Quiz</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}