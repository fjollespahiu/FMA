{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\FMA\\\\Sessions\\\\React JS\\\\props\\\\src\\\\props.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n\n// parent component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Parent() {\n  _s();\n  const data = \"Hello from parents\";\n  const [name, setName] = useState(\"Fjolla\");\n  return /*#__PURE__*/_jsxDEV(Child, {\n    message: data,\n    username: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n//child component\n_s(Parent, \"/PWk0+0bdttO4erxCpP1i3vfdyo=\");\n_c = Parent;\nfunction Child({\n  message,\n  username\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Child;\nfunction FruitList() {\n  // const fruits = ['Apple', 'Banana', 'Cherry'];\n  // const newFruits = [...fruits, 'mango']\n  // console.log(newFruits)\n  // const updatedFruits ={...fruit, taste:'sweet'}\n  // console.log(updatedFruits);\n  // const fruit = {name: 'apple', color: 'red'};\n  // const {name, color} = fruit;\n  // console.log(color);\n\n  const fruits = ['apple', 'banana', 'mango'];\n  const filtered = fruits.filter(fruit => fruit !== 'banana');\n  console.log(filtered);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: fruits.map((fruit, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: fruit\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_c3 = FruitList;\nexport default FruitList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Parent\");\n$RefreshReg$(_c2, \"Child\");\n$RefreshReg$(_c3, \"FruitList\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Parent","_s","data","name","setName","Child","message","username","fileName","_jsxFileName","lineNumber","columnNumber","_c","children","_c2","FruitList","fruits","filtered","filter","fruit","console","log","map","index","_c3","$RefreshReg$"],"sources":["C:/Users/Lenovo/Documents/FMA/Sessions/React JS/props/src/props.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n// parent component\r\nfunction Parent(){\r\n    const data = \"Hello from parents\";\r\n    const [name, setName] = useState(\"Fjolla\");\r\n    return(\r\n        <Child message={data} username={name} />\r\n    );\r\n}\r\n\r\n//child component\r\nfunction Child({message, username}){\r\n    return(\r\n        <>\r\n        <div>{message}</div>\r\n        <div>{username}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction FruitList(){\r\n    // const fruits = ['Apple', 'Banana', 'Cherry'];\r\n    // const newFruits = [...fruits, 'mango']\r\n    // console.log(newFruits)\r\n    // const updatedFruits ={...fruit, taste:'sweet'}\r\n    // console.log(updatedFruits);\r\n    // const fruit = {name: 'apple', color: 'red'};\r\n    // const {name, color} = fruit;\r\n    // console.log(color);\r\n    \r\n    const fruits =['apple', 'banana', 'mango'];\r\n    const filtered = fruits.filter(fruit=> fruit !== 'banana');\r\n    console.log(filtered);\r\n    \r\n    \r\n    return(\r\n        <ul>\r\n         {fruits.map((fruit, index)=>(\r\n                <li key={index}>{fruit}</li>\r\n            ))}\r\n        </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default FruitList;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EACb,MAAMC,IAAI,GAAG,oBAAoB;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EAC1C,oBACIE,OAAA,CAACQ,KAAK;IAACC,OAAO,EAAEJ,IAAK;IAACK,QAAQ,EAAEJ;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEhD;;AAEA;AAAAV,EAAA,CARSD,MAAM;AAAAY,EAAA,GAANZ,MAAM;AASf,SAASK,KAAKA,CAAC;EAACC,OAAO;EAAEC;AAAQ,CAAC,EAAC;EAC/B,oBACIV,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACAhB,OAAA;MAAAgB,QAAA,EAAMP;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpBd,OAAA;MAAAgB,QAAA,EAAMN;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eACnB,CAAC;AAEX;AAACG,GAAA,GAPQT,KAAK;AASd,SAASU,SAASA,CAAA,EAAE;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,MAAM,GAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;EAC1C,MAAMC,QAAQ,GAAGD,MAAM,CAACE,MAAM,CAACC,KAAK,IAAGA,KAAK,KAAK,QAAQ,CAAC;EAC1DC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EAGrB,oBACIpB,OAAA;IAAAgB,QAAA,EACEG,MAAM,CAACM,GAAG,CAAC,CAACH,KAAK,EAAEI,KAAK,kBAClB1B,OAAA;MAAAgB,QAAA,EAAiBM;IAAK,GAAbI,KAAK;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAGb;AAACa,GAAA,GAvBQT,SAAS;AAyBlB,eAAeA,SAAS;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}