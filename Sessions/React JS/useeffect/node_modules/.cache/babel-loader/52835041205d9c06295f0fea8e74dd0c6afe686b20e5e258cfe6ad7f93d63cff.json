{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\FMA\\\\Sessions\\\\React JS\\\\useeffect\\\\src\\\\Condition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Condition() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  userEffect(() => {\n    if (!isRunning) return;\n    const interval = setInterval(() => {\n      setCount(prevCount => prevCount + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [isRunning]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsRunning(true),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsRunning(false),\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(0),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Condition, \"VozOqVxY3jIfWYtJ8/YNYk+raUc=\");\n_c = Condition;\nexport default Condition;\nvar _c;\n$RefreshReg$(_c, \"Condition\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Condition","_s","count","setCount","isRunning","setIsRunning","userEffect","interval","setInterval","prevCount","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Documents/FMA/Sessions/React JS/useeffect/src/Condition.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nfunction Condition() {\r\n    const [count, setCount] = useState(0);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    \r\n    userEffect(()=>{\r\n        if(!isRunning) return;\r\n        \r\n        const interval = setInterval(()=>{\r\n            setCount(prevCount => prevCount + 1)\r\n        },1000);\r\n\r\n        return () => clearInterval(interval)\r\n\r\n    }, [isRunning])\r\n\r\n    return (\r\n        <>\r\n            <p>Count: {count}</p>\r\n            <button onClick={() => setIsRunning(true)}>Start</button>\r\n            <button onClick={() => setIsRunning(false)}>Stop</button>\r\n            <button onClick={() => setCount(0)}>Reset</button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Condition;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjDY,UAAU,CAAC,MAAI;IACX,IAAG,CAACF,SAAS,EAAE;IAEf,MAAMG,QAAQ,GAAGC,WAAW,CAAC,MAAI;MAC7BL,QAAQ,CAACM,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;IACxC,CAAC,EAAC,IAAI,CAAC;IAEP,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EAExC,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;EAEf,oBACIP,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACId,OAAA;MAAAc,QAAA,GAAG,SAAO,EAACT,KAAK;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBlB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAAC,IAAI,CAAE;MAAAM,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzDlB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAAC,KAAK,CAAE;MAAAM,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzDlB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMb,QAAQ,CAAC,CAAC,CAAE;MAAAQ,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACpD,CAAC;AAEX;AAACd,EAAA,CAvBQD,SAAS;AAAAiB,EAAA,GAATjB,SAAS;AAyBlB,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}